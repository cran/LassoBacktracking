// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// scale_cen
NumericMatrix scale_cen(NumericMatrix x, NumericVector scales, NumericVector centres, IntegerVector p, int p_max, IntegerVector var_names_main);
RcppExport SEXP LassoBacktracking_scale_cen(SEXP xSEXP, SEXP scalesSEXP, SEXP centresSEXP, SEXP pSEXP, SEXP p_maxSEXP, SEXP var_names_mainSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scales(scalesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type centres(centresSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type p_max(p_maxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type var_names_main(var_names_mainSEXP);
    __result = Rcpp::wrap(scale_cen(x, scales, centres, p, p_max, var_names_main));
    return __result;
END_RCPP
}
// change_dim
int change_dim(IntegerVector dim, int p_eff);
RcppExport SEXP LassoBacktracking_change_dim(SEXP dimSEXP, SEXP p_effSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type p_eff(p_effSEXP);
    __result = Rcpp::wrap(change_dim(dim, p_eff));
    return __result;
END_RCPP
}
// zero
int zero(NumericMatrix beta, int l_start);
RcppExport SEXP LassoBacktracking_zero(SEXP betaSEXP, SEXP l_startSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type l_start(l_startSEXP);
    __result = Rcpp::wrap(zero(beta, l_start));
    return __result;
END_RCPP
}
// in_log
IntegerVector in_log(IntegerVector a, LogicalVector b);
RcppExport SEXP LassoBacktracking_in_log(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type b(bSEXP);
    __result = Rcpp::wrap(in_log(a, b));
    return __result;
END_RCPP
}
// any_indmax
bool any_indmax(LogicalVector violations, int p_eff);
RcppExport SEXP LassoBacktracking_any_indmax(SEXP violationsSEXP, SEXP p_effSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< LogicalVector >::type violations(violationsSEXP);
    Rcpp::traits::input_parameter< int >::type p_eff(p_effSEXP);
    __result = Rcpp::wrap(any_indmax(violations, p_eff));
    return __result;
END_RCPP
}
// which_indmax
IntegerVector which_indmax(LogicalVector violations, int p_eff);
RcppExport SEXP LassoBacktracking_which_indmax(SEXP violationsSEXP, SEXP p_effSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< LogicalVector >::type violations(violationsSEXP);
    Rcpp::traits::input_parameter< int >::type p_eff(p_effSEXP);
    __result = Rcpp::wrap(which_indmax(violations, p_eff));
    return __result;
END_RCPP
}
// add_inter_orig
int add_inter_orig(NumericMatrix X, NumericVector scales, NumericVector centres, int p_eff, IntegerMatrix inter_orig);
RcppExport SEXP LassoBacktracking_add_inter_orig(SEXP XSEXP, SEXP scalesSEXP, SEXP centresSEXP, SEXP p_effSEXP, SEXP inter_origSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scales(scalesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type centres(centresSEXP);
    Rcpp::traits::input_parameter< int >::type p_eff(p_effSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type inter_orig(inter_origSEXP);
    __result = Rcpp::wrap(add_inter_orig(X, scales, centres, p_eff, inter_orig));
    return __result;
END_RCPP
}
// add_inter
int add_inter(NumericMatrix X, IntegerVector active_old, IntegerVector active_new, NumericVector scales, NumericVector centres, int p_eff, IntegerMatrix interactions, int p, IntegerMatrix inter_orig);
RcppExport SEXP LassoBacktracking_add_inter(SEXP XSEXP, SEXP active_oldSEXP, SEXP active_newSEXP, SEXP scalesSEXP, SEXP centresSEXP, SEXP p_effSEXP, SEXP interactionsSEXP, SEXP pSEXP, SEXP inter_origSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type active_old(active_oldSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type active_new(active_newSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scales(scalesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type centres(centresSEXP);
    Rcpp::traits::input_parameter< int >::type p_eff(p_effSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type interactions(interactionsSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type inter_orig(inter_origSEXP);
    __result = Rcpp::wrap(add_inter(X, active_old, active_new, scales, centres, p_eff, interactions, p, inter_orig));
    return __result;
END_RCPP
}
// inner_prod_abs_comp
NumericVector inner_prod_abs_comp(NumericMatrix x, IntegerVector I, NumericMatrix y, int l0);
RcppExport SEXP LassoBacktracking_inner_prod_abs_comp(SEXP xSEXP, SEXP ISEXP, SEXP ySEXP, SEXP l0SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type I(ISEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type l0(l0SEXP);
    __result = Rcpp::wrap(inner_prod_abs_comp(x, I, y, l0));
    return __result;
END_RCPP
}
// inner_prod_abs_comp2
NumericVector inner_prod_abs_comp2(NumericMatrix x, LogicalVector I, NumericMatrix y, int p_eff, int l0);
RcppExport SEXP LassoBacktracking_inner_prod_abs_comp2(SEXP xSEXP, SEXP ISEXP, SEXP ySEXP, SEXP p_effSEXP, SEXP l0SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type I(ISEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type p_eff(p_effSEXP);
    Rcpp::traits::input_parameter< int >::type l0(l0SEXP);
    __result = Rcpp::wrap(inner_prod_abs_comp2(x, I, y, p_eff, l0));
    return __result;
END_RCPP
}
// any_ind
bool any_ind(LogicalVector v, IntegerVector indices);
RcppExport SEXP LassoBacktracking_any_ind(SEXP vSEXP, SEXP indicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< LogicalVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type indices(indicesSEXP);
    __result = Rcpp::wrap(any_ind(v, indices));
    return __result;
END_RCPP
}
// beta_active
int beta_active(NumericMatrix x, NumericMatrix beta, NumericMatrix resid_cur, IntegerVector active_set, int l, double thresh, int maxit, double lam, double alpha_lam, double alpha, double alpha_lam_div, double null_dev);
RcppExport SEXP LassoBacktracking_beta_active(SEXP xSEXP, SEXP betaSEXP, SEXP resid_curSEXP, SEXP active_setSEXP, SEXP lSEXP, SEXP threshSEXP, SEXP maxitSEXP, SEXP lamSEXP, SEXP alpha_lamSEXP, SEXP alphaSEXP, SEXP alpha_lam_divSEXP, SEXP null_devSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resid_cur(resid_curSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type active_set(active_setSEXP);
    Rcpp::traits::input_parameter< int >::type l(lSEXP);
    Rcpp::traits::input_parameter< double >::type thresh(threshSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_lam(alpha_lamSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_lam_div(alpha_lam_divSEXP);
    Rcpp::traits::input_parameter< double >::type null_dev(null_devSEXP);
    __result = Rcpp::wrap(beta_active(x, beta, resid_cur, active_set, l, thresh, maxit, lam, alpha_lam, alpha, alpha_lam_div, null_dev));
    return __result;
END_RCPP
}
// find_l0
int find_l0(NumericMatrix X, int p_eff_old, int p_eff, NumericMatrix resid_cur, int l0, NumericVector lambda);
RcppExport SEXP LassoBacktracking_find_l0(SEXP XSEXP, SEXP p_eff_oldSEXP, SEXP p_effSEXP, SEXP resid_curSEXP, SEXP l0SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type p_eff_old(p_eff_oldSEXP);
    Rcpp::traits::input_parameter< int >::type p_eff(p_effSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resid_cur(resid_curSEXP);
    Rcpp::traits::input_parameter< int >::type l0(l0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    __result = Rcpp::wrap(find_l0(X, p_eff_old, p_eff, resid_cur, l0, lambda));
    return __result;
END_RCPP
}
